<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on یادداشتهای بیت نیمسوز</title>
    <link>http://fzero.rubi.gd/post/</link>
    <description>Recent content in Posts on یادداشتهای بیت نیمسوز</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fa-ir</language>
    <lastBuildDate>Thu, 14 Apr 2016 17:00:34 +0430</lastBuildDate>
    <atom:link href="http://fzero.rubi.gd/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>go web server on port 80</title>
      <link>http://fzero.rubi.gd/post/go/go-web-server/</link>
      <pubDate>Thu, 14 Apr 2016 17:00:34 +0430</pubDate>
      
      <guid>http://fzero.rubi.gd/post/go/go-web-server/</guid>
      <description>&lt;p&gt;Golang یک کتابخانه عالی &lt;a href=&#34;https://golang.org/pkg/net/http/&#34;&gt;http&lt;/a&gt; داره که کلی قابلیت بهت میده. مثلا &lt;a href=&#34;http://http2.golang.org/&#34;&gt;http2&lt;/a&gt; و  قابلیت ساپورت رنج روی فایل برای دانلود که تقریبا به &lt;a href=&#34;https://golang.org/pkg/net/http/#ServeContent&#34;&gt;سادگی آب خوردن&lt;/a&gt; پیاده میشه.
من معمولا یه وب سرور میذاشتم سر راهش. یعنی پروکسیش میکردم. مثلا &lt;a href=&#34;https://www.nginx.com/&#34;&gt;nginx&lt;/a&gt; و هنوزم خیلی وقتا اینکار رو میکنم.
منتها یه وقتایی هست که کلا نمیخوای درگیر وب سرور خارجی بشی. دلیلش هر چی هست :)‌ و میخوای از سرور خود Golang استفاده کنی. این کاملا با اون چیزی که توی پایتون و روبی و PHP به عنوان وب سرور به خوردمون دادن متفاوته. این یک سرور آماده برای کاره نه یک وب سرور برای محیط دولوپمنت.&lt;/p&gt;

&lt;p&gt;خوب اوکی، وب سرور آماده کاره، کد من چی؟آیا عاقلانست کدم رو با دسترسی روت اجرا کنم؟
چرا با روت؟ چون میخوام رو پورت ۸۰ یا ۴۴۳ گوش وایسه وب سرورم، و طبق استاندارد، فقط برنامه های اجرا شده با دسترسی روت میتونن روی پورتهای پایینتر از ۱۰۲۴ گوش وایسن.&lt;/p&gt;

&lt;p&gt;خوب یه کم نا امید کنندست. من هرگز همچین کاری نمیکنم. میشه انداختش توی داکر و امنیتش رو تا حدی تضمین کرد . دست کم اینه که اگه تو کد من زدم &lt;code&gt;rm -rf&lt;/code&gt; همه چی نمیترکه.
ولی راه ساده ترش ایه که به این فایل به خصوص اجازه بدیم رو پورتهای کمتر از ۱۰۲۴ هم گوش وایسه :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# setcap cap_net_bind_service=+ep /path/to/executable
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;طبیعیه که # به معنی اینه که این دستور با دسترسی روت اجرا میشه. بعد از این دستور این برنامه میتونه روی پورتهای پایینتر هم گوش وایسه.&lt;/p&gt;

&lt;p&gt;برای اینکه بفهمید چه اتفاقی میفته، اول &lt;code&gt;man setcap&lt;/code&gt; رو ببینید و برای لیست &lt;code&gt;capabilities&lt;/code&gt; هم طبیعتا &lt;code&gt;man capabilities&lt;/code&gt; رو.&lt;/p&gt;

&lt;p&gt;&amp;ndash; همین.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GPG یک راهنمای نسبتا مفصل</title>
      <link>http://fzero.rubi.gd/post/general/gpg-step-by-step/</link>
      <pubDate>Fri, 08 Apr 2016 14:35:06 +0430</pubDate>
      
      <guid>http://fzero.rubi.gd/post/general/gpg-step-by-step/</guid>
      <description>

&lt;h1 id=&#34;gpg-یا-pgp-چی-هست-اصلا:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;GPG یا PGP چی هست اصلا؟&lt;/h1&gt;

&lt;p&gt;این یک الگوریتم رمز گذاری شخصی حساب میشه. در حقیقت PGP اون الگوریتمه، و من از برنامه آزاد GPG برای مدیریتش استفاده میکنم.
درسته که بگم این این کلید PGP منه، ولی حقیقت اینه که ناخواسته خیلی وقتا متوجه میشم که گفتم این کلید GPG منه، عمدی نیست ولی از لحاظ تکنیکی اگه اهل خورده گرفتن باشی غلط میتونه باشه.&lt;/p&gt;

&lt;p&gt;من سعی دارم تو این نوشته، توضیح بدم که چطور میشه یه کلید ساخت و مطمئن شد که امنه. این روش منه، روشی که من بعد از یکی دو سال رسیدم بهش، ولی دلیل نمیشه که این روش کامل باشه. روشی شما ممکنه متفاوت باشه و برای شما ایده‌آل تر باشه، پس اگه جایی به نظرتون غلط بود بگید حتما تا اصلاح کنم، ولی اگه به اندازه کافی ایده آل شما نبود، خوشحال میشم که بشنوم روشتونو، ولی ممکنه که اعمال نکنم اون تغییری که به نظر شما این مطلب رو ایده‌آل میکنه :)&lt;/p&gt;

&lt;h1 id=&#34;از-کجا-شروع-کنم:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;از کجا شروع کنم؟&lt;/h1&gt;

&lt;p&gt;مطمئن بشید که نسخه آخر gpg روی سیستم شما نصبه. الان و در زمان نوشتن این نوشته نسخه ۲.۱.۱۱ آخرین نسخه رسمی gpg توی &lt;a href=&#34;https://gnupg.org/index.html&#34;&gt;سایتشه&lt;/a&gt;. البته نسخه کلاسیک هم هست و نسخه استیبل، که خوب من همیشه دوست دارم لبه باشم.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg --version
gpg (GnuPG) 2.1.11
libgcrypt 1.6.5
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ~/.gnupg
Supported algorithms:
Pubkey: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
Cipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
        CAMELLIA128, CAMELLIA192, CAMELLIA256
Hash: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
Compression: Uncompressed, ZIP, ZLIB, BZIP2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;تو این سیستم، یک کلید عمومی وجود داره و یک کلید خصوصی. مشخصه که کلید عمومی رو میشه خیلی راحت انتشار داد و در اختیار عموم گذاشت. ولی تکلیف کلید خصوصی  مشخص تره.
این کلید نباید تحت هیچ شرایطی بره رو اینترنت :)‌کلا هیچ جا نبریتش، ایده آل ترین جا براش یک سیستم کاملا ایزولست که اصلا به اینترنت دسترسی نداشته باشه. منتها چطور ازش استفاده کنیم اونوقت؟
مثلا من همه کامیتهام توی git رو ساین میکنم. اینجوری باید هر کامیت رو ببرم روی اون ماشین ایزوله و ساین کنم و برگردونم؟ قطعا نه. تو اینجا من سعی میکنم که روش رو توضیح بدم که هم کلید شما امن باشه و هم اینکه شما بتونید بی دردسر از کلیدتون استفاده کنید.&lt;/p&gt;

&lt;p&gt;خوب قدم به قدم بریم جلو حتمالا خیلی بهتر میشه :)&lt;/p&gt;

&lt;h1 id=&#34;ساخت-یک-کلید-امن-قدم-به-قدم:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;ساخت یک کلید امن، قدم به قدم&lt;/h1&gt;

&lt;h2 id=&#34;ساخت-کلید:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;ساخت کلید&lt;/h2&gt;

&lt;p&gt;برای ساخت کلید، &lt;code&gt;gpg --full-gen-key&lt;/code&gt; کمکتون میکنه.
&amp;ndash; برای اینکه پروسه زدن رمز مشخص نبود توی اسکی نما، دوباره دارم رکورد میکنم اونها رو با‍ &lt;code&gt;pinentry-course&lt;/code&gt; و داخل داکر. داکر دبیان هم دارم که gpg اصلیش نسخه ۱ ـه و من نسخه ۲ رو جدا گانه نصب کردم که قدیمیتر از ۲.۱.۱۱ است و دستور &lt;code&gt;--full-gen-key&lt;/code&gt; رو نداره. برای همین &lt;code&gt;--gen-key&lt;/code&gt; رو استفاده میکنم.&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/b2jy7v73ddnpvl40e2k5tuay7.js&#34; id=&#34;asciicast-b2jy7v73ddnpvl40e2k5tuay7&#34; async&gt;&lt;/script&gt;

&lt;p&gt;من همه جوابها رو کامل دادم، حتی اونها که جواب پیشفرضشون درست بود. مراحل سادست. اول الگوریتم رو انتخاب میکنیم که پیشفرضش خوبه، بعد میگه که اندازه کلیدی RSA رو بگو. پیشفرض خودش ۲۰۴۸ رو انتخاب نکنید.
این کلید هر چی بلند تر باشه امنتره. گام بعدی اینه که ازتون میپرسه میخواید این کلید چند وقت معتبر باشه. من زدم برای همیشه، این خیلی بهتره. در حقیقت کلید اصلی رو به برای همیشه انتخاب میکنیم، کلید های بعدی که به عنوان sub key سا همون زیر کلید استفاده میشن رو،‌با زمانهای کمتر درست خواهیم کرد :)
گامهای بعدی هم که اسم و مشخصاتتون رو میپرسه که خوب شما مشخصات خودتون رو میزنید طبیعتا. یک ایمیل هم اینجا میخواد که شما ایمیل اصلیتون رو بزنید، ایمیلهای دیگه رو هم میشه بعدا اضافه کرد.&lt;/p&gt;

&lt;p&gt;بعدش از شما رمز میخواد. بسته به &lt;code&gt;pinentry&lt;/code&gt; نصب شده روی سیستم شما، این گرفتن رمز ممکنه با روش متفاوتی از شما گرفته بشه. برای من توی X11 گرفته میشه (رکورد جدید توی داکره و توی ترمینال گرفته میشه رمز) ولی میتونید ‍‍&lt;code&gt;pinentry-curses&lt;/code&gt; رو تنظیم کنید تا اونم توی ترمینال باشه که خوب برای من زیاد مهم نیست :)&lt;/p&gt;

&lt;p&gt;یه نکته دیگه. اگه کار وقت گیری دارید، مثلا کپی کردن و اپتیمایز کردن هاردتون، یا هر کار دیگه ای که میتونه بی نظمی تولید کنه، بهترین وقتش همین موقع است. هر چی سر سیستموتون شلوغ باشه کلید رندومی که تولید میکنه اعتبار بیشتری داره. یعنی رندوم تره :) -خیلی عبارت مسخره ایه رندوم تر!-&lt;/p&gt;

&lt;p&gt;کامپیوتر معمولا تو یه سری رندوم درست میکنه. من بارها سر ملت رو با این روش کلاه گذاشتم :) مثلا یه برنامه بود که رندم یه نفر رو انتخب میکرد که بره ظرف بشوره تو خوابگاهمون با هم اتاقی ها. من همیشه طوری سید رو تغییر میدادم که خودم انتخاب نشم، مگه روزهایی که ظرفها کم بود.&lt;/p&gt;

&lt;p&gt;اینطوری، در زمانی که gpg داره کلید رندوم رو برای شما ایجاد میکنه، کلی کلید رندوم صرف برنامه های دیگه میشن، و رندومهای استفاده شده تو یه سری پشت سر هم درنمیان، البته خود gpg به این بسنده نمیکنه و کلی کلک دیگه هم میزنه که قطعا هر چی این بی نظمی بیشتر باشه تو سیستم شما، کلید تولید شده امنیت بیشتری داره.&lt;/p&gt;

&lt;p&gt;این کلید ،کلید اصلی شماست. همون کلیدی که باید بذاریتش تو صندوق کلیدشم قورت بدید :)&lt;/p&gt;

&lt;p&gt;یه سری کارهای دیگه هم هست، مثلا اینکه عکس اضافه کنید یا اینکه الگوریتم هش رو تغییر بدید به یه روش قدرتمندتر، اینها رو من بعدا اضافه میکنم به همین پست :) شاید هم آخرش این متن رو عوض کردم :)&lt;/p&gt;

&lt;h2 id=&#34;اضافه-کردن-زیر-کلید-subkey:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;اضافه کردن زیر کلید (subkey)&lt;/h2&gt;

&lt;p&gt;مساله از همینجا شروع میشه. من میخوام کلیدم رو ببرم رو سیستم شرکت که کمتر از لپتاپ خودم به امنیتش اطمینان دارم. یا اصلا اگه لپتاپم و دزدیدن چی؟&lt;/p&gt;

&lt;p&gt;بهترین کار اینه که یه زیر کلید اضافه کنیم به این کلید، بعد یه جوری یه نسخه ازش تهیه کنیم که کلید اصلی توش نباشه. نسخه کاملش رو بفرستیم یه جای امن، و این نسخه جدید رو استفاده کنیم.
علاوه بر این یه روشی هم داشته باشیم که بتونیم اون کلید رو هم provoke کنیم وقتی لازم شد.&lt;/p&gt;

&lt;p&gt;خوب اول یه &lt;code&gt;subkey&lt;/code&gt;
من معمولا از این کلید برای ساین کردن کامیتها و تگها استفاده میکنم توی &lt;code&gt;git.&lt;/code&gt; خوب پس یه کلید میخوام برای امضا کردن. ممکنه یه جایی برای encrypt کردن بخواید استفاده کنید ازش، همین مراحل رو میتونید برای اونکار هم انجام بدید.&lt;/p&gt;

&lt;p&gt;اول کلید رو برای ویرایش باز کنید. ‍‍&lt;code&gt;gpg --edit-key your@email.com&lt;/code&gt; این همون آدرس ایمیلیه که توی قسمت ساخت کلید زدید.&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/2vqrwjohchk5xxspvyqkeril1.js&#34; id=&#34;asciicast-2vqrwjohchk5xxspvyqkeril1&#34; async&gt;&lt;/script&gt;

&lt;p&gt;گام اول اینه که توی ترمینالی که &lt;code&gt;gpg‍‍&lt;/code&gt; در اختیارتون میذاره، &lt;code&gt;addkey&lt;/code&gt; رو تایپ کنید.
اول ازتون میپرسه چه کلیدی میخواید و برای چه کاری. من برای امضا کردن میخوام، پس &lt;code&gt;(4) RSA (sign only )&lt;/code&gt; رو با زدن کلید ۴ انتخاب میکنم.&lt;/p&gt;

&lt;p&gt;بعدش ازم میپرسه برای چند وقت میخواید این کلید معتبر باشه. من اینجا دو سال رو انتخاب کردم. میتونید بزنید مادام‌العمر یا کمتر یا بیشتر از دو سالی که من زدم.  ولی من ترجیحم اینه که بدونم کلید واقعا کی منقضی میشه. اینو خودتون میتونید بسته به شرایط تصمیم بگیرید. مثلا من یه کلید دارم روی لپتاپ خودم که تاریخ انقضا نداره، ولی یه کلید هست روی یه سرور که برای ساین استفاده میکنم ازش و تاریخ انقضاش یک ساله.&lt;/p&gt;

&lt;p&gt;بعدش از شما یه سری رمز میپرسه. الیش که رمز کلید تازه ایجاد شدست. بعد ممکنه رمز کلید اصلی رو بپرسه. مثلا برای من نپرسید، چون من &lt;code&gt;gpg-agent&lt;/code&gt; روی لپتاپم در حال اجرا بود و تا یه مدتی دیگه رمز نمیپرسه برای کلید.
دقت کنید قاعدتا اینوریه که اول رمز کلید جدید رو میگیره، بعد رمز کلید اصلی رو میپرسه، و بعد مجددا رمز کلید جدید رو هم میپرسه.&lt;/p&gt;

&lt;p&gt;گام آخر این که توی ترمینال بنویسید &lt;code&gt;save&lt;/code&gt; و کلید رو ذخیره کنید. حالا یک کلید برای ساین دارید که به جای کلید اصلی از اون استفاده مشه. یعنی هر وقت برای ساین از شما رمز بخواد، رمز این کلید رو میزنید نه رمز کلید اصلی رو .&lt;/p&gt;

&lt;h2 id=&#34;گواهی-فوت:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;گواهی فوت؟؟&lt;/h2&gt;

&lt;p&gt;حالا میرسیم به این بحث که اگه کلید دزدیده شد چکار کنم؟ اگه کلید دوم دزدیده بشه و شما همچنان اصلی رو داشته باشید به راحتی میشه کلید رو &lt;code&gt;revoke&lt;/code&gt; کرد، ولی اگه کلید اصلی دزدیده بشه، چی؟&lt;/p&gt;

&lt;p&gt;برای اینکار یه ‍‍&lt;code&gt;revocation certificate&lt;/code&gt; درست میکنیم. دقیقا مثل بیمست :) که میگن امیدوارم هیچوقت مورد استفادتون نشه :))))) ولی خوب به هر حال.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg --output gpg-revocation-certificate-fzero-rubi-gd --gen-revoke fzero@rubi.gd 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;اسم فایل خروجی مهم نیست، ولی آدرس ایمیل، همونیه که برای ساختش استفاده کردید.&lt;/p&gt;

&lt;p&gt;خوب این یه فایله که اگه به اندازه من حساسیت داشته باشید، پرینتش میکنید و یه جا توی یکی از کتابهاتون مخفیش میکنید. خودش هم ممکنه یه جایی نگه دارید، ول قطعا اون یه جا توی اینترنت نیست!!! یا حتی توی یه جایی که ظاهرا امنه مثل &lt;code&gt;mega&lt;/code&gt; یا هر چیز مشابه دیگه ای. بهترین کاری که میشه کرد اینه که از اینترنت دورش کنید.
و البته طبیعتا اینو کنار کلید اصلی - که به زودی میگم چجوری اون رو هم &lt;code&gt;export&lt;/code&gt; کنید، قرار ندید. چون این قراره که در صورت گم شدن اون، ازش محافظت کنه، نه که خودشم باهاش گم بشه :)&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/bk6uhfv5bzeth3unvxfqkzj53.js&#34; id=&#34;asciicast-bk6uhfv5bzeth3unvxfqkzj53&#34; async&gt;&lt;/script&gt;

&lt;p&gt;ازتون یه دلیل میپرسه، که میتونید یه شماه انتخاب کنید بعد یه جمله از شما میگیره به عنوان توضیح که میتونید حالی بگذارید اصلا. در نهایت ازتون رمز رو میپرسه که خوب، منطقا باید رمز رو بزنید تا بتونه این گواهی رو تولید کنه.&lt;/p&gt;

&lt;h2 id=&#34;خروجی-کلید-ها:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;خروجی کلید ها&lt;/h2&gt;

&lt;p&gt;حالا وقت خروجی گرفتن از کلیدهاست.
اول کلید عمومی :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg --export --armor fzero@rubi.gd &amp;gt; public-gpg-key-fzero-rubi-gd.public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;آدرس فایل رو هر چی میخواید بدید. من برای خودم یه کانونشن دارم که کلید های عمومی رو با پسوند ‍&lt;code&gt;public&lt;/code&gt; و کلید های خصوصی رو با پسوند &lt;code&gt;private&lt;/code&gt; ازشون &lt;code&gt;export&lt;/code&gt; میگیرم.&lt;/p&gt;

&lt;p&gt;این کلید رو میتونید به هر نحوی که میدونید امنه منتشر کنید. البته از پابلیک سرورها هم میتونید استفده کنی که آخر نوشته مینویسم چطوری.&lt;/p&gt;

&lt;p&gt;خوب گام مهم، گرفتن کلید اختصاصی شماست.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg --export-secret-keys --armor fzero@rubi.gd &amp;gt; private-gpg-key-fzeo-rubi-gd.private
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;این اول رمز کلید اصلی رو میپرسه، بعد به ازای تک تک زیرکلیدهایی که ساختید ازتون رمز میپرسه.&lt;/p&gt;

&lt;p&gt;نتیجه یه فایله که کاملا باید از درسترس دیگران و همچنین اینترنت دور باشه.&lt;/p&gt;

&lt;h2 id=&#34;حذف-کلید-اصلی-master:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;حذف کلید اصلی (master)&lt;/h2&gt;

&lt;p&gt;خوب این فایل اصلی که قراره تو یه جای امن ذخیره بشه. گام بعدی حذف کلید اصلی از این سیستم و ایجد یه کلید gpg بدون کلید اصلی ولی همچنان با قابلیت امضا و/یا کدگذاریه.&lt;/p&gt;

&lt;h3 id=&#34;export-subkey:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;export subkey&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;gpg --export-secret-subkeys fzero@rubi.gd &amp;gt; subkey-temporary
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;اول رمز کلید اصلی رو بزنید بعد رمز زیرکلیدها رو.&lt;/p&gt;

&lt;h3 id=&#34;گام-بعدی-حذف-کلید-اصلی:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;گام بعدی حذف کلید اصلی&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;gpg --delete-secret-key fzero@rubi.gd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;چندین و چند بار ازتون میپرسه که حذف کنم؟ مطمئنی؟ شما همه رو جواب بدید که حذف کن. رمز هم اگه پرسید طبیعتا بزنید.&lt;/p&gt;

&lt;h3 id=&#34;برگردوندن-زیر-کلیدها:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;برگردوندن زیر کلیدها&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;gpg --import subkey-temporary
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;که بعد از یه سری پرسیدن رمز - که دیگه نمینویسم، خودتون هر وقت رمز خواست بزنید - یه همچین چیزی تو خروجی میبیید :&lt;/p&gt;

&lt;p&gt;‍‍```&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg --import subkey-temporary
gpg: key 09ABEE4C: &amp;quot;Forud (This is an example) &amp;lt;fzero@rubi.gd&amp;gt;&amp;quot; not changed
gpg: To migrate &#39;secring.gpg&#39;, with each smartcard, run: gpg --card-status
gpg: key 09ABEE4C: secret key imported
gpg: Total number processed: 5
gpg:              unchanged: 1
gpg:       secret keys read: 5
gpg:   secret keys imported: 3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;گام آخر اینه که فایل &lt;code&gt;subkey-temporary&lt;/code&gt; رو سر به نیست کنید. با هر ابزاری که دوست دارید، مثلا&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shred --remove subkey-temporary 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;حالا با دستور ‍&lt;code&gt;gpg --list-secret-keys&lt;/code&gt; یه همچین چیزی میبینید :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/home/f0rud/.gnupg/pubring.kbx
------------------------------
sec#  rsa4096/09ABEE4C 2016-04-08 [SC]
uid         [ultimate] Forud (This is an example) &amp;lt;fzero@rubi.gd&amp;gt;
ssb   rsa4096/E713A00C 2016-04-08 [E]
ssb   rsa4096/6D49C7B5 2016-04-08 [S] [expires: 2018-04-08]
ssb   rsa4096/12FAAB7D 2016-04-08 [S] [expires: 2018-04-08]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;کلید اصلی کنارش یه علامت # هست. &lt;code&gt;sec#&lt;/code&gt; که این نشون میده که کلید توی این کلیدها نیست! خوب تبریک میگم، موفق شدید.&lt;/p&gt;

&lt;p&gt;حالا میتونید از کلید بدون کلید اصلی هم export بگیرید.
برای اینکار کافیه که همون دستورهایی که قبلا برای اینکار زدیم رو استفاده کنید، فقط مطمئن شید که فایل اصلی که دفعه قبلی export گرفتید رو رونویسی نمیکنید و از بین نمیبرید :&lt;/p&gt;

&lt;p&gt;‍‍‍```&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg --export-secret-keys --armor fzero@rubi.gd &amp;gt; no-master-private-gpg-key-fzeo-rubi-gd.private
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;جمع-بندی-نهایی:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;جمع بندی نهایی&lt;/h2&gt;

&lt;p&gt;الان تعداد فایلهایی که دارید ۴ تاست. یک کلید عمومی، یک کلید خصوصی با کلید اصلی، یک کلید خصوصی بدون کلید اصلی و یک گواهی برای &lt;code&gt;revoke&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;کلید عمومی که تکلیفش معلومه. گواهی هم که گفتم اگه منم که پرینت مکنم و اصلا به فایلش اعتماد نمیکنم.&lt;/p&gt;

&lt;p&gt;کلید خصوصی با کلید اصلی هم تو یه سیستم امن نگه میدارم، و روی لپتاپ خودم هم کلید خصوصی بدون کلید اصلی رو هم ‍‍&lt;code&gt;import&lt;/code&gt; میکنم و فایلش رو هم سر به نیست میکنم.&lt;/p&gt;

&lt;p&gt;برای &lt;code&gt;import&lt;/code&gt; کلید اینطوری عمل کنید :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg --import /parth/to/public-key.public /path/to/private-key.private 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;و البته بعد از زدن رمز، مجددا فایل تو سیستم شما وارد میشه.&lt;/p&gt;

&lt;p&gt;از این به بعد یه سری ترفند برای استفاده از این کلیدهاست. دیگه کار اجباری ای نیست خوندنشون&lt;/p&gt;

&lt;h1 id=&#34;انتشار-کلید:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;انتشار کلید&lt;/h1&gt;

&lt;p&gt;برای اینکار، همونطور که قبلا گفتم میتونید کلید رو به هر روشی که دوست دارید به دست دیگران برسونید. ولی بهترین روش، انتشارش توی &lt;code&gt;keyserver‍&lt;/code&gt; هاست.
من شخصا تو سرور &lt;code&gt;mit&lt;/code&gt; منتشر میکنم. منتها سرور &lt;code&gt;ubuntu‍&lt;/code&gt; هم هست اصولا فرق خاصی نداره، همشون با هم سینک میشن. ابزار تو لینوکس براش زیاده ولی خط فرمانیش :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gpg --send-keys KEY_ID --keyserver hkp://subkeys.pgp.net&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;KEY_ID هم میتونید با زدن &lt;code&gt;gpg --list-keys&lt;/code&gt; ببینید. راه دوم هم اینه که فقط برید به آدرس &lt;a href=&#34;http://pgp.mit.edu/&#34;&gt;http://pgp.mit.edu/&lt;/a&gt; و توی باکسی که هست، کل اون فایل کلید عمومی رو کپی کنید و تموم :)&lt;/p&gt;

&lt;h2 id=&#34;امضای-کامیت-ها-و-تگها:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;امضای کامیت ها و تگها&lt;/h2&gt;

&lt;p&gt;گفتم که برای امضای کامیتهام از این روش استفاده میکنم. برای اینکار
 git نسخه ۱.۷ به بالا احتیاج دارید که اگه ندارید واقعا توصیه میکنم سیستمتون رو آپدیت کنید :)))
 همین چند روز پیش، گیتهاب قابلیت تعیین اعتبار رو به سیستمش اضافه کرد، و اصلا انگیزه من از نوشتن این مطلب، همون بود و البته نباید نقش &lt;a href=&#34;https://twitter.com/meysampg&#34;&gt;@meysampg&lt;/a&gt; رو نادیده گرفت :)))&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://fzero.rubi.gd/images/gpg/gpg-github.png&#34; alt=&#34;git commit verify- github&#34; /&gt;&lt;/p&gt;

&lt;p&gt;برای اینکار سوییچ S توسط گیت معرفی شده :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; -S[&amp;lt;keyid&amp;gt;], --gpg-sign[=&amp;lt;keyid&amp;gt;]
           GPG-sign commits. The keyid argument is optional and defaults to the committer identity; if specified, it must be stuck to the option without a space.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;راحت ترین حالت اینه که کلید gpg شما با هویت شما توی گیت یکی باشه.
یعنی اون زمانی که دارید کلید gpg رو میسازید، اسم و ایمیلی رو بدید که برای گیت کانفیگ کردید و توی فایل کانفیگ گلوبال گیت هست . برای دیدن هویت خودتون توی گیت اینو بزنید :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git config --global --get &amp;quot;user.name&amp;quot;
git config --global --get &amp;quot;user.email&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;اولی باید همون چیزی باشه که به عنوان &lt;code&gt;Real name&lt;/code&gt; وقت ساختن کلید اضافه کردید، و دومی هم ایمیل ثبت شدست.
اگر فرق میکنه، میتونید یه UID دیگه اضافه کنید یا اینکه وقت کامیت به &lt;code&gt;-S&lt;/code&gt; شناسه کلید رو هم اضافه کنید که مثلا من چند خط بالاتر کلیدم رو با &lt;code&gt;list-keys&lt;/code&gt; نشون دادم :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssb   rsa4096/12FAAB7D 2016-04-08 [S] [expires: 2018-04-08]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;میشه &lt;code&gt;12FAAB7D&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;افزودن-یک-ایمیل-به-کلید:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;افزودن یک ایمیل به کلید&lt;/h1&gt;

&lt;p&gt;گاهی لازم میشه که یک ایمیل دیگه اضافه کنید. مثل حالتی که بالا گفتم. فرض کنید از ایمیل شرکتی برای کامیت استفاده میکنید و میخواید کامیت رو ساین کنید. یک راه اینه که شناسه کلید رو بزنید، اما راه دوم اینه که ایمیل رو به کلید اضافه کنید . برای اینکار نمیشه از کلید بدون کلید اصلی استفاده کرد. (یکی از دلایلی که اون همه دردسر کشیدیم همین بود :) )
برید روی سیستمی که به کلید اصلی دسترسی دارید و دستور ویرایش رو بزنید :&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/8izog2t7i9wqae136ladxr94d.js&#34; id=&#34;asciicast-8izog2t7i9wqae136ladxr94d&#34; async&gt;&lt;/script&gt;

&lt;p&gt;اول &lt;code&gt;adduid&lt;/code&gt; رو بزنید و یه ایمیل جدید اضافه کنید. بعدش این ایمیل انتخاب شدست، شما کافیه &lt;code&gt;addkey&lt;/code&gt; رو بزنید تا یک کلید به این هویت اضافه بشه، درنهایت &lt;code&gt;save&lt;/code&gt; و تمام.&lt;/p&gt;

&lt;h1 id=&#34;حذف-یک-کلید:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;حذف یک کلید&lt;/h1&gt;

&lt;p&gt;برای اینکه یه کلید رو حذف کنید به هر دلیلی، کافیه کلید اصلی رو ویرایش کنید (کلید بدون کلید اصلی نمیتونه همچین کاری کنه) :&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/1c8hy0wef8sfyika113l0mr80.js&#34; id=&#34;asciicast-1c8hy0wef8sfyika113l0mr80&#34; async&gt;&lt;/script&gt;

&lt;p&gt;تو این یکی، من یه سری متن هم با کلید # زدم که کامنت هستن، ممکنه یه کم گیج کننده باشه ولی لازم بود. با زدن &lt;code&gt;key 1&lt;/code&gt; کلید شماره یک انتخاب میشه و با دوباره زدنش کلید از حالت انتخاب خارج میشه.
میتونید چند تا کلید رو انتخاب کنید و درنهایت کلیدهای انتخاب شده رو با &lt;code&gt;revkey&lt;/code&gt; غیرفعال کنید و بعدش هم ذخیره کنید و تمام.&lt;/p&gt;

&lt;h1 id=&#34;افزودن-عکس-به-کلید:15e4b036b1a6dfc4502d5b7e8e5dc87b&#34;&gt;افزودن عکس به کلید&lt;/h1&gt;

&lt;p&gt;اینکه اینکار درسته یا نه، به اعتقادات خودتون برمیگرده. من بدم نمیاد، بعضی ها ممکنه دوست نداشته باشن :)
چند تا نکته، اول اینکه عکس کم حجم باشه. چون به کلید عمومی اضافه میشه و حجم کلید عمومی بهتره پایین بمونه جون مدام درحال دست به دست شدنه.
دوم اینکه فایل باید jpg باشه. تا جایی که میدونم این فقط تو استاندارد اومده نه png یا هر پسوند دیگه ای.&lt;/p&gt;

&lt;p&gt;خیلی سادست، بازهم کلید gpg رو با &lt;code&gt;--edit-key&lt;/code&gt; باز کنید و اینبار دستور &lt;code&gt;addphoto&lt;/code&gt; رو بزنید.&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/8q538q271rso9uwqu4wz4tgc4.js&#34; id=&#34;asciicast-8q538q271rso9uwqu4wz4tgc4&#34; async&gt;&lt;/script&gt;

&lt;p&gt;دقت کنید که به عکس ۱۱ کیلوبایتی من میگه خیلی بزرگ، که البته حق داره، سبیلهام توی اون عکس خودشون ۱۰-۱۱ کیلویی هستن.&lt;/p&gt;

&lt;p&gt;&amp;mdash; دیگه خسته شدم :) این مطلب رو هر موقع حسش باشه آپدیت میکنم و مطالب مرتبط رو اضافه میکنم. شما هم اگه دوست دارید اصلاحیه بزنید یا هر چی اضافه کنید، گیتهاب و پول ریکوئست شما را میخواند :) &amp;mdash;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>اولین کامیتهای پروژه Go</title>
      <link>http://fzero.rubi.gd/post/go/go-first-commit/</link>
      <pubDate>Sat, 02 Apr 2016 23:31:08 +0430</pubDate>
      
      <guid>http://fzero.rubi.gd/post/go/go-first-commit/</guid>
      <description>&lt;p&gt;شوخ طبعی دولوپرها همیشه جالب بوده برام، چون اصولا ندارن و چیزهایی که براشون شوخی حساب میشه رو کسی جز خودشون براش بامزه حساب نمیشه.&lt;/p&gt;

&lt;p&gt;این شوخی تیم گو بوده که اولین کامیتهای گو رو اینطوری رقم زده :&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://fzero.rubi.gd/images/go-first/gh.png&#34; alt=&#34;the very first commits of go project&#34; /&gt;
&lt;a href=&#34;https://github.com/golang/go/commit/7d7c6a97f815e9279d08cfaea7d5efb5e90695a8&#34;&gt;لینک اولین کامیت&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;برای اونها که ممکنه شوخی رو نگرفته باشن، تاریخ و Author اون چهار تا کامیت اول رو ببینید. &lt;a href=&#34;https://en.wikipedia.org/wiki/Brian_Kernighan&#34;&gt;Brian Kernighan&lt;/a&gt;، کسی که اولین &lt;a href=&#34;https://en.wikipedia.org/wiki/%22Hello,_World!%22_program&#34;&gt;Hello World&lt;/a&gt; شناخته شده رو تو کتابش داره، تاریخ هم که خیلی قدیمیه، برمیگرده به قبل از زبان C حتی.&lt;/p&gt;

&lt;p&gt;از دید من این یعنی که ما سعی داریم فلک را سقف بشکافیم و طرحی نو در اندازیم، و برای همین تمام تجربه های دیگه رو گذاشتیم کنار و از C رسیدیم به Go (هر چند که نذاشتن و خیلی زبانهای دیگه تو شکل گیری Go نقش داشتن.)&lt;/p&gt;

&lt;!-- روز خوبی نبود امروز، درگیریهای توی شرکت، دعواهای توییتری :))  --&gt;
</description>
    </item>
    
    <item>
      <title>چند کاربر با یک zsh</title>
      <link>http://fzero.rubi.gd/post/multi_user_zsh/</link>
      <pubDate>Fri, 16 Jan 2015 14:36:50 +0330</pubDate>
      
      <guid>http://fzero.rubi.gd/post/multi_user_zsh/</guid>
      <description>&lt;p&gt;قاعدتا نباید پیش بیاد، ولی پیش میاد که نیاز پیدا کنیم که چند نفر بخوان از یک اکانت استفاده کنند خصوصا برای SSH کردن به یک سرور.
مثلا ما یک برنامه داریم که تحت یک کاربر خاص اجرا شده و همه ما نیاز داریم که با همون کاربر وارد سرور بشیم یا حتی اگه با کاربر خودمون هم باشه در نهایت برای تغییرات، مجبوریم به همون کاربر سوییچ کنیم.
این کار شاید خوب نباشه، ولی الان بحث من نیست. لطفا نیاید بگید ای داد ای بیداد این مشکل امنیتی داره و فیلان.&lt;/p&gt;

&lt;p&gt;مشکل اینه که با این سیستم، همه مجبور به استفاده از یک سری تنظیمات مشترک میشیم. بیشتر از همه این مشکل خودشو تو تنظیمات شل نشون میده. حقیقت اینه که شل اون کاربر به خصوص ثابته،‌ مثلا برای ما zsh.&lt;/p&gt;

&lt;p&gt;من یه اسکریپت کوچیک نوشتم که بتونیم هم یه کانفیگ مجزا برای zsh داشته باشیم و هم اینکه بتونیم history رو برای هر کاربر جدا کنیم.&lt;/p&gt;

&lt;p&gt;این اون اسکریپته :&lt;/p&gt;

&lt;p&gt;&lt;script src=&#34;https://gist.github.com/fzerorubigd/a781e6425b810cbbe336.js&#34;&gt;&lt;/script&gt;
&lt;noscript&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/env zsh
# to setup :
# mkdir $ROOT/yourname
# $EDITOR $ROOT/yourname/zshrc

ROOT=~/.profiles

if [ -z $PROFILE_DIR ];then
    pushd $ROOT &amp;gt;/dev/null
    FILES=($ROOT/*/)
    FILES+=(&amp;quot;Exit&amp;quot;)

    select f in ${FILES[*]}
    do
        if [[ &amp;quot;$f&amp;quot; == &#39;Exit&#39; ]];then
            return
        fi

        if [ -f &amp;quot;$f/zshrc&amp;quot; ];then
            PROFILE_DIR=&amp;quot;$f&amp;quot;
            break
        fi
    done

    export PROFILE_DIR
    popd &amp;gt;/dev/null
fi
PROFILE_HISTORY=&amp;quot;${PROFILE_DIR}zsh_history&amp;quot;
export HISTFILE=$PROFILE_HISTORY
source $PROFILE_DIR/zshrc

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/noscript&gt;&lt;/p&gt;

&lt;p&gt;برای اینکه کار کنه، پوشه &lt;code&gt;~/.profiles&lt;/code&gt; رو بسازید، بعد به ازای هر کاربر یه پوشه توی این بسازید
مثلا برای من میشه &lt;code&gt;~/.profiles/f0rud/&lt;/code&gt;
بعدش فایل &lt;code&gt;zshrc&lt;/code&gt; رو برای خودتون بسازید و توی این فولدر بذارید دقت کنید که دیگه دات نداره اسمش.&lt;/p&gt;

&lt;p&gt;تا اینجا همه چی اوکیه. ولی باحال تر میشه اگه کسی بخواد با ssh کردن، اتوماتیک خودش سوییچ بشه به کانفیگ مورد نظرش.
برای اینکار باید به ssh بگیم که به env های کاربر توی فایل  ‍‍‍‍
&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; احترام بذاره.&lt;/p&gt;

&lt;p&gt;برای این کار بادی این آپشن  ‍&lt;code&gt;PermitUserEnvironment&lt;/code&gt;
رو روشن کنید. البته یه ریسک هم داره :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Specifies whether ~/.ssh/environment and environment= options in
     ~/.ssh/authorized_keys are processed by sshd.  The default is
     &amp;quot;no&amp;quot;.  Enabling environment processing may enable users to bypass
     access restrictions in some configurations using mechanisms such
     as LD_PRELOAD.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;بعدش کافیه تو فایل &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; که کلیدهای ssh خودتون رو اضافه میکنید،‌برای کاربر خودتون
قبل از کلید خودتون اینو بنویسید :
‍‍‍&lt;code&gt;
PROFILE_DIR=~/.profiles/f0rud/ ssh-rsa AAAAB3NzaC1yc2...
&lt;/code&gt;
اون اسلش آخر هم لازمه.
اینجوری دیگه زمان لاگین از طریق SSH پروفایل درست انتخاب میشه و دیگه نیازی به انتخاب اولیه نیست.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>setup vps</title>
      <link>http://fzero.rubi.gd/post/setup-vps/</link>
      <pubDate>Tue, 06 Jan 2015 09:30:45 +0330</pubDate>
      
      <guid>http://fzero.rubi.gd/post/setup-vps/</guid>
      <description>&lt;p&gt;من با ترمینال غریبه نیستم، حقیقت اینه که خیلی هم باهاش راحتم. اینکه بخوام یه برنامه رو تو ترمینال نصب کنم و کانفیگ کنم اصولا ترجیح منه، ولی این یه جفت استثنا هم داره. این یه جفت استثنا، تنظیم dns (باز tinydns خیلی بهتره، از bind متنفرم رسما!) و یکی هم تنظیم mail server برای دریافت و ارسال ایمیل، ارسال معولا راحته، ولی دریافت رو اصلا حسشو ندارم :)) الان اگه شما حسشو دارید، و اینکار براتون راحته، سیستمتون هم به اندازه کافی قدرتمند هست که مثلا یه roundcube راه بندازید روش، همین جا دیگه ادامه ندید :) و خیلی خوشحالم که تا همین قسمتشو خوندید :))&lt;/p&gt;

&lt;p&gt;یه مشکل دیگه هم هست، که مثلا برای همین وبلاگ، من یه دامین دارم، نیازی هم ندارم به هیچ فضای خاصی، و همین گیتهاب و فضای اون برام کافیه، ولی حقیقتش اینه که اصلا من این دامین رو گرفتم برای ایمیل، خیلی ظلمه که اون ایمیل رو نداشته باشم، ولی بالاخره باید یه جوری این دامین رو وصل کنم به یه سیستم که بتونم یه میل روش نصب کنم، و حقیقتا خیلی مسخره بود که یه وی پی اس یا حتی یه هاست اشتراکی! براش بگیرم.&lt;/p&gt;

&lt;p&gt;این شد که به فکر افتادم یه راه جایگزین براشون پیدا کنم، و خوب پیدا شد.&lt;/p&gt;

&lt;p&gt;برای dns من خیلی ساده از &lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;cloudflare&lt;/a&gt; استفاده کردم. انقدر ساده و راحت که اون اوایل برای یه مدتی باورم نمیشد کار کنه، ولی خوب، چرا نباید کار کنه :) یه اکانت cloudflare بسازید، که فکر کنم راحت و ساده میتونید اینکار رو بکنید.&lt;/p&gt;

&lt;p&gt;گام بعدی اضافه کردن سایتتونه.&lt;/p&gt;

&lt;p&gt;بعد اضافه کردن رکوردهای لازم، معمولا یه A رکورد لازمه برای دامنه اصلی، و یک CNAME برای ساب دامنه ها. کار سختی نیست. من دامنه اصلی rubi.gd رو فرستادم روی یک آی پی خاص ، شمل میتونید مثلا اونو کلا بذاریدش رو github. ساب دامنه fzero هم که خوب خیلی ساده یه رکورد CNAME بود که بعد با گیتهاب مدیریت میشه.&lt;/p&gt;

&lt;p&gt;زیاد تنظیماتش سخت نیست، خود cloudflare هم کمک میکنه برای راه انداختنش، خودش توضیح میده که حالا مثلا یه A رکورد کم داری یا هر چی.&lt;/p&gt;

&lt;p&gt;این قسمت کار ساده تر از اونه که توضیح بخواد، و اگر کسی حوصله داشت انجام بده و اسکرین شات بذاره، همین جا PR بده خیلی هم خوشحال میشم.&lt;/p&gt;

&lt;p&gt;اما نکته رو اعصاب هنوز مونده. ایمیل! ارسال و دریافت ایمیل که هم نه اسپم بشه (یعنی اگه کار ناشایستی نکردیم، چرا باید اسپم بشه آخه!!) و هم اینکه یک میل باکس درست و حسابی هم داشته باشیم. گوگل، mailgun که تا جایی که یادمه یه بار ازش استفاده کردم، این امکانات رو میدن، گوگل که کلا پولیه و mailgun یه سری محدودیت اعصاب خورد کن داره، و اینکه خوب، برادر پوتین :)) به دادم رسید و رفتم سراغ yandex که یه سرور همه کارست که توی روسیه خیلی طرفدار داره.&lt;/p&gt;

&lt;p&gt;اگه البته میخواید از این سیستم برای دریافت و ارسال ایمیل های اکیدا محرمانه! استفاده کنید، توصیه نمیکنم، ولی بعیده که کاری به کار ایمیلای ما داشته باشن، دست کم کمتر از گوگل انگولکشون میکنن.
خوب چکار باید بکنیم؟ طبیعتا اولش یه اکانت &lt;a href=&#34;http://yandex.com&#34;&gt;yandex.com&lt;/a&gt; بسازید، ساختش سادست و سرراست.
گام بعدی اضافه کردن دامنه شماست. حقیقت اینه که نمیدونم چرا این قسمت سایت yandex فقط روسی نوشته و توصیه میکنم مثلا از کروم استفاده کنید که بتونید ترجمش کنید. برید به &lt;a href=&#34;https://pdd.yandex.ru/domains_add/&#34;&gt;این آدرس&lt;/a&gt; :&lt;/p&gt;

&lt;p&gt;یا منتظر بشید ترجمش کنه کروم براتون یا اینکه اگه میفهمید زبونشونو :) گوشه سمت راست بالا لینک ورود رو بزنید و با اکانتی که توی &lt;a href=&#34;http://yandex.com&#34;&gt;yandex.com&lt;/a&gt; ساختید وارد بشید.&lt;/p&gt;

&lt;p&gt;خیلی از لینکها وقتی تو مود ترجمه شده هستید کار نمیکنن، هر وقت تو این شرایط بودید، لینک رو که پیدا کردید و فهمیدید چیه، ترجمه رو خاموش کنید و ادامه بدید.&lt;/p&gt;

&lt;p&gt;&amp;lsquo;گام بعدی کاملا مشخصه، اسم سایتتون رو بعد از @ وارد کنید :
&lt;img src=&#34;http://fzero.rubi.gd/images/setup-vps/yandex1.png&#34; alt=&#34;ثبت دامنه در yandex&#34; /&gt;&lt;/p&gt;

&lt;p&gt;مثلا من rubi.gd رو وارد کردم که آدرس همین سایته. و دکمه جلوییش رو بزنید.&lt;/p&gt;

&lt;p&gt;صفحه بعدی ترجمه شدش میشه این :
&lt;img src=&#34;http://fzero.rubi.gd/images/setup-vps/yandex2.png&#34; alt=&#34;ثبت دامنه در yandex&#34; /&gt;&lt;/p&gt;

&lt;p&gt;دو مرحله هست که میتونید دوتاشو یدفعه انجام بدید. اولیش وریفای کردن دامنه برای &lt;a href=&#34;http://yandex.com&#34;&gt;yandex.com&lt;/a&gt; ه. ظاهرا خود yandex میتونه خدماتی مشابه  &lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;cloudflare&lt;/a&gt;  ارایه بده که من چون از قبل تو همین CF راحت بودم دنبالش نرفتم. ولی اگر از yandex برای همین کار استفاده کنید، دیگه این مراحل رو ندارید.&lt;/p&gt;

&lt;p&gt;به هر حال میگه که دو تا رکورد DNS باید اضافه بشه. اولش یه CNAME باید ساخته بشه که مثلا تو عکس بالا باید مقدارش قرار داده بشه yamail-c038a7c8dc21 و یک MX هم باید اضافه بشه برای من این شد :&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://fzero.rubi.gd/images/setup-vps/cf-2.png&#34; alt=&#34;افزودن رکورد در cf&#34; /&gt;&lt;/p&gt;

&lt;p&gt;بعد از اینکه تایید بشه میرید صفحه بعدی، این ممکنه در حد چند دقیقه طول بکشه ولی دکمه رو فشار بدید سعی میکنه تست کنه.&lt;/p&gt;

&lt;p&gt;بعدشم که سادست :
&lt;img src=&#34;http://fzero.rubi.gd/images/setup-vps/yandex3.png&#34; alt=&#34;ایجاد ایمیل&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://fzero.rubi.gd/images/setup-vps/yandex4.png&#34; alt=&#34;افزودن ایمیل&#34; /&gt;&lt;/p&gt;

&lt;p&gt;اون لینک Mail Login تله است :)) از اونجا برید کل زندگی روسی میشه.
خیلی ساده برید &lt;a href=&#34;http://yandex.com&#34;&gt;yandex.com&lt;/a&gt; و صفحه ایمیل رو بزنید و آدرس کامل ایمیل رو بزنید و کلمه رمز رو.
دفعه اول خیلی ساده ازتون یه سری مشخصات میپرسه و تموم. اگه از لینک تله برید، که کلا باید این رو روسی پر کنید و بعد تو ایمیل باکستون پیدا کردن تغییر زبان زیاد سخت نیست.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>کمک به پروژه‌های آزاد - دونیشن</title>
      <link>http://fzero.rubi.gd/post/donation/</link>
      <pubDate>Fri, 19 Dec 2014 15:24:36 +0330</pubDate>
      
      <guid>http://fzero.rubi.gd/post/donation/</guid>
      <description>&lt;p&gt;یکی از چیزهایی که توی دنیای نرم‌افزارهای آزاد گاهی نقش حیاتی ایفا میکنه، دونیشن از سمت جامعه کاربری‌ه. منتها این دونیشن گاهی یه سری برداشتهای غلط رو باعث میشه. چند تاشون تو ذهن من هست، مینویسم، اگر چیزی به ذهن شما رسید خوشحال میشم که این پست رو تو گیتهاب ویرایش کنید و دوباره درخواست PR بدید.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;دونیشن صدقه نیست. اگر از کاری رضایت ندارید، دوستش ندارید، لازمش ندارید و اصولا دلیلی برای دونیت ندارید، دونیت نکنید، ولی وقتی دونیت کردید اون رو به حساب صدقه نذارید، بذارید به حساب دستمزد اون کار.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;بدونید دقیقا دارید به کی دونیت میکنید، کی نقش جمع کننده رو داره، کی طرف حساب واقعی شماست. اگر به شخصی مستقیما دونیت میکنید که صاحب اثره، قضیه خیلی سادست. فقط اینکه مطمئن باشید به دستش میرسه کافیه. مثل قضیه &lt;a href=&#34;http://linuxstory.ir/&#34;&gt;جادی و کتابش&lt;/a&gt;.
اما اگر واسطه در کار هست، باید واسطه بی کم و کاست خودش رو معرفی کنه، مگر اینکه مشکل قانونی داشته باشه، مثلا ما انتظار نداریم نماینده thepiratebay بیاد خودشو برای دونیت معرفی کنه :) ولی مثلا انتظار صد در صد من اینه که توی یکی از صفحات کمپین &lt;a href=&#34;http://pfont.ir/&#34;&gt;فونت فارسی&lt;/a&gt; به این اختصاص داه بشه که پول رو کی داره جمع میکنه، چطوری میشه باهاش تماس گرفت، هم ایمیل و حتی تلفن (در صورت امکان) در دسترس باشه و بعد اینکه یه راهی معرفی بشه برای اینکه کاربر بفهمه دونیتش چطوری به شخص اصلی رسیده.
مهمه که بدونید اون شخص/اشخاص اصلی کی هستن. تا وقتی مقصد اصلی دونیشن رو نمیدونید، اینکار احمقانست.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;تا وقتی نمیدونید در قبال این دونیشن چه کاری صورت میگیره و چطوری، دونیت نکنید. مثلا من میگم اگه فلان قدر دونیت کنید یه سیستم عامل مینویسم :) سوالاتتون که باید جواب بدم اینهاست (با فرض اینکه من اصولا توانایی اینکار رو داشته باشم :)) ) :
اینکه این سیستم عامل دقیقا چطوری منتشر میشه؟ تحت چه مجوزی؟ در صورتی که دونیشن ها به حد نصاب نرسه من چکارشون میکنم؟ آیا اصلا زمانی برای به حد نصاب رسیدن هست؟ تا زمان به حد نصاب رسیدن پول (یا هر چیزی که دونیت میشه) کجا خواهد رفت؟&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;مهمترین نکته. شما دارید (طبق فرض اول) برای چیزی دونیت میکنید که فایدش نهایتا قراره به شما برسه. خوب این فایده چیه؟؟ قراره من این سیستم عامل رو که نوشتم، چی به شما بدم؟ مهم نیست کم یا زیاد. ولی باید مدون و مشخص باشه.
مثلا اینکه اسم شما تو فایل کمک کنندگان خواهد اومد، یا اینکه یه نسخه ویژه مادام‌العمر بهتون داده میشه، اصلا یه بنیادی درست میشه شما میشید سهام دارش، یا اصلا یه دستوری تو این سیستم عامل هست که بزنی اسم همه رو اعلام میکنه. این باید مشخص باشه، کاملا و قابل تغییر هم نیست. اگر بعدا مشخص شد امکان مثلا ساختن اون دستور نیست، باید کل پول رو به همه پس بدم (دقت کنید!! نه که ایمیل بزنم بگم اگه میخواید بیاید پس بگیرید، بی چون و چرا پس بدم) و بعد بگم حالا اگه میخواید با شرایط جدید، دونیت کنید.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;اگر در شرایط تغییری پیش اومد که کاملا با شرایط قبلی هماهنگی داشت، مثلا تا الان میگفتم هر که بیشتر از ۱۰ هزار تومن دونیت کنه اسمش میره تو لیست همکارها. حالا بعد از یه مدت بگم هر کی که بیشتر از ۱۰۰ هزار تومن دونیت کنه یه کامندی تو سیستم عامل میذارم که اسمشو لیست کنه (و همچنان شرط قبلی پابرجاست!)، هیچ حرفی از گذشته نقض نشده. ولی باز هم باید این امکان باشه، و البته اینبار خود نفر دونیت کننده باید درخواست بده، که دونیشن برگشت داده بشه.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;اینها چیزهاییه که حق شما به عنوان یه دونیت کنندست که بدونید، و به نظر من اگر جایی این موارد مشخص نبودن، دونیت نکنید!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>گور بدون مرده - ssh-honeypot</title>
      <link>http://fzero.rubi.gd/post/ssh-honey-pot/</link>
      <pubDate>Fri, 12 Dec 2014 15:55:44 +0330</pubDate>
      
      <guid>http://fzero.rubi.gd/post/ssh-honey-pot/</guid>
      <description>&lt;p&gt;یکی از تکنیکهای امنیتی که بهش هانی‌پات یا همون کندوی عسل هم میگن، اینه که یه سرویس جعلی ایجاد کنی و بعد اونو به جای سرویس اصلی بذاری. این سرویس نباید خیلی سنگین باشه، معمولا پشتش هیچی نیست و هر کاری هم که صورت بگیره آخرش اتفاق خاصی قرار نیست بیفته. اون کسی که قصد نفوذ به سیستم رو داره گیر این تله میفته و به جای اینکه واقعا برسه به سرویس اصلی با یه نسخه احمقانه سرش گرم میشه:)&lt;br /&gt;
این سرویس جعلی باید کاملا مشابه سرویس اصلی باشه. حتی ایده‌آلش اینه که به کاربر اکسس هم بده و بندازتش تو یه محیط محدود مثل موش آزمایشگاهی :)))&lt;/p&gt;

&lt;p&gt;معادلی که ما تو فارسی میتونیم ازش استفاده کنیم، گور بدون مرده‌است. همون ضرب‌المثلی که میگه این گوری که تو روش گریه میکنی مرده توش نیست. منم دیشب برای اینکه یه تجربه‌ای داشته باشم با golang دست به کار شدم و یدونه خیلی سادشو استارت زدم.&lt;/p&gt;

&lt;p&gt;جالبی قضیه هم برام این بود که با کمترین زمان یه چیزی بنویسم، که کار کنه! و نوشتم. تو یک ساعت،‌کمتر از مدت زمانی که صرف انتخاب اسمش کردم نوشتمش&lt;a href=&#34;https://github.com/fzerorubigd/go0r&#34;&gt;go0r&lt;/a&gt;. اسمشم که مشخصه چرا این شد :) گور بدون مرده، گور صفر یا گور نال. ممنون از بچه‌های توییتر برای اسمش.&lt;/p&gt;

&lt;p&gt;خیلی ساده و در ۱۰۰ خط کد - که کاملا اتفاقی بود و وقتی تموم شد فهمیدم ۱۰۰ خط شده - اینکار رو انجام دادم، تازه از  &lt;a href=&#34;http://spf13.com/project/viper&#34;&gt;viper&lt;/a&gt; و &lt;a href=&#34;https://github.com/Sirupsen/logrus&#34;&gt;logrus&lt;/a&gt; هم استفاده کردم که برای یه کار کوچیک معمولا نیازی بهشون نیست ولی چون قصد دارم در آینده یه سری قابلیت دیگه هم اضافه کنم بهش، ازشون استفاده کردم.&lt;/p&gt;

&lt;p&gt;قصد داشتم هفته پیش این بلاگ رو استارت کنم که یه اتفاق فوق‌العاده بد برام افتاد، و خوب، به هرحال زندگی ادامه داره.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>سلام دنیا، دوباره!</title>
      <link>http://fzero.rubi.gd/post/hello-world-again/</link>
      <pubDate>Sun, 29 Jun 2014 14:24:35 +0000</pubDate>
      
      <guid>http://fzero.rubi.gd/post/hello-world-again/</guid>
      <description>&lt;p&gt;سلام. دوباره برای بار هزار و یکم، و این بار با &lt;a href=&#34;https://github.com/spf13/hugo&#34;&gt;hugo&lt;/a&gt;
شاید براتون این سوال پیش بیاد که چه بلایی قراره سر وبلاگ قبلیم بیاد، واقعیت اینه که خودم هم همین سوال رو دارم. فعلا جوابی
براش ندارم، ولی شاید یه روزی یه سری چیزاش رو برگردونم، شاید، اگه حسش بود و هزار اما و اگر دیگه.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;تم وبلاگ هم کار دوست خوبم &lt;a href=&#34;https://twiter.com/sinaehsani&#34;&gt;سیناست&lt;/a&gt; و هنوز داره تکمیل میشه. خیلی ناقصه حالا حالاها :)) فقط برای اینکه یه چیزی باشه تا بتونم بنویسم فعلا تا از سرم نپریده :)&lt;/del&gt; تم فعلی &lt;a href=&#34;https://github.com/zyro/hyde-x&#34;&gt;hyde-x&lt;/a&gt; و تا تم خودم تکمیل بشه از این استفاده میکنم.&lt;/p&gt;

&lt;p&gt;یکی از دلایلی که من این وبلاگ رو اینبار به صورت استاتیک و اینطوری،‌با گیت مدیریت میکنم، اینه که میخوام مطالب رو تکمیل کنم و آپدیت نگه دارم. به عبارتی یه پست همیشه معتبر باشه، کاری که با سیستمهای مدیریت وبلاگ معمولی سخته، و علاوه بر همه اینها خیلی خوشحال میشم که شما هم تو این مورد با من همکاری کنید! اگر اشتباهی دیدید، فورک و بعدش یه pull request!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>